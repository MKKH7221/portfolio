{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, \"prop \" + _toDisplayString(this.$route.params.id), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.text = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.text]]), _createTextVNode(\" \" + _toDisplayString(this.user.id), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","$route","params","id","_ctx","text","$event","user"],"sources":["/usr/src/app/src/pages/app/Detail.vue"],"sourcesContent":["<template>\n       <div>prop {{ this.$route.params.id }} </div>\n        <input v-model=\"text\"> {{ this.user.id }}\n</template>\n  \n  <script>\n  import axios from \"axios\";\n  export default {\n    name: 'detail',\n    props: {\n      //ここで引数を受け取る\n      id: String\n    },\n    data(){\n            return{\n                user: [],\n                id: null\n            }\n        },\n    beforeMount() {\n        this.id = this.$route.params.id;\n        console.log('params what we get is === ' + this.id);\n        this.getResults(this.id);\n    },\n    methods: {\n        getResults(q) {\n            axios\n            .get('http://localhost:8080/detail?', {params:  {id: q}})\n                .then(\n                    response => {\n                        this.user.push(response.data);\n                        console.log(this.user);\n                    } \n                ).catch(\n                    error => {\n                        console.debug('error');\n                        let errorData1 = {id: 2, name: \"Jirou\"};\n                        this.user.push(errorData1);\n                    }\n                );    \n        }\n    }\n    \n  }\n  </script>\n  \n  <style>\n  /*CSSを記載*/\n  </style>\n  "],"mappings":";;6DACOA,mBAAA,CAA4C,aAAvC,OAAK,GAAAC,gBAAA,MAAQC,MAAM,CAACC,MAAM,CAACC,EAAE,kB,gBACjCJ,mBAAA,CAAsB;+DAANK,IAAA,CAAAC,IAAI,GAAAC,MAAA;iDAAJF,IAAA,CAAAC,IAAI,E,oBAAE,GAAC,GAAAL,gBAAA,MAAQO,IAAI,CAACJ,EAAE,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}