{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, \"prop \" + _toDisplayString(this.id), 1 /* TEXT */), _createCommentVNode(\" <input v-model=\\\"text\\\"> {{ this.user }} \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","id","_createCommentVNode"],"sources":["/usr/src/app/src/pages/app/Detail.vue"],"sourcesContent":["<template>\n       <div>prop {{ this.id }} </div>\n        <!-- <input v-model=\"text\"> {{ this.user }} -->\n</template>\n  \n  <script>\n  export default {\n    name: 'detail',\n    props: {\n      //ここで引数を受け取る\n      id: String\n    },\n    data(){\n            return{\n                user: [],\n                id: null\n            }\n        },\n    beforeMount() {\n        this.id = this.$route.params.id\n        console.log('params what we get is === ' + this.id);\n        init(this.id);\n    },\n    methods: {\n        init(id) {\n            axios\n            .get('http://localhost:8080/detail?', {params: {id: id}})\n                .then(\n                    response => {\n                        this.user.push(response.data);\n                        console.log(this.item);\n                    } \n                ).catch(\n                    error => {\n                        console.debug('error');\n                        let errorData1 = {id: 2, name: \"Jirou\"};\n                        this.user.push(errorData1);\n                    }\n                );    \n        }\n    }\n    \n  }\n  </script>\n  \n  <style>\n  /*CSSを記載*/\n  </style>\n  "],"mappings":";;6DACOA,mBAAA,CAA8B,aAAzB,OAAK,GAAAC,gBAAA,MAAQC,EAAE,kBACnBC,mBAAA,8CAA+C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}