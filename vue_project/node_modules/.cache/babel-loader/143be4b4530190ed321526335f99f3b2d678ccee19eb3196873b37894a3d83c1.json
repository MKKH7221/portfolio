{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Edit User \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  id: \"app\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\",\n  for: \"emailt\"\n}, \"Email\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\",\n  for: \"country\"\n}, \"Country\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\"\n}, \"Select a drink\", -1 /* HOISTED */);\nconst _hoisted_7 = [\"value\", \"selected\"];\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Sign up\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Field = _resolveComponent(\"Field\");\n  const _component_ErrorMessage = _resolveComponent(\"ErrorMessage\");\n  const _component_Form = _resolveComponent(\"Form\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"div\", {\n    class: \"alert alert-danger\"\n  }, _toDisplayString($data.errMessage), 513 /* TEXT, NEED_PATCH */), [[_vShow, $data.errMessage]]), _withDirectives(_createElementVNode(\"div\", {\n    class: \"alert alert-success\"\n  }, _toDisplayString($data.message), 513 /* TEXT, NEED_PATCH */), [[_vShow, $data.message]]), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" <form> \"), _createVNode(_component_Form, {\n    onSubmit: $options.onSubmit\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [_hoisted_4, _createVNode(_component_Field, {\n      name: \"email\",\n      type: \"email\",\n      rules: $options.validateEmail\n    }, null, 8 /* PROPS */, [\"rules\"]), _createVNode(_component_ErrorMessage, {\n      name: \"email\"\n    })]), _createElementVNode(\"div\", null, [_hoisted_5, _createVNode(_component_Field, {\n      name: \"drink\",\n      as: \"select\",\n      multiple: \"\"\n    }, {\n      default: _withCtx(({\n        value\n      }) => [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.drinks, drink => {\n        return _openBlock(), _createElementBlock(\"option\", {\n          key: drink,\n          value: drink,\n          selected: value && value.includes(drink)\n        }, _toDisplayString(drink), 9 /* TEXT, PROPS */, _hoisted_7);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }), _withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editUserForm.country.code = $event),\n      id: \"selectedCountryCode\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.countryList, country => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: country.name,\n        value: country.code\n      }, _toDisplayString(country.name), 9 /* TEXT, PROPS */, _hoisted_8);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.editUserForm.country.code]])]), _hoisted_9]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onSubmit\"]), _createCommentVNode(\" <form @submit=\\\"this.update()\\\">\\n                <table class=\\\"table\\\">\\n                    <tr>\\n                        <th>Id</th>\\n                        <td><input v-model=\\\"editUserForm.id\\\" disabled=\\\"true\\\"></td>\\n                    </tr>\\n                    <tr>\\n                        <th>Name</th>\\n                        <td><input type=\\\"text\\\" v-model=\\\"value\\\"/></td>\\n                        <p>{{ value }}</p>\\n                    </tr>\\n                </table>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"> Confirm </button>\\n            </form> \")]), _createCommentVNode(\" <table class=\\\"table\\\">\\n            <tr>\\n                <th>Id</th>\\n                <td><input v-model=\\\"editUserForm.id\\\" disabled=\\\"true\\\"></td>\\n            </tr>\\n            <tr>\\n                <th>Name</th>\\n                <td><input v-model=\\\"editUserForm.name\\\" /></td> \"), _createCommentVNode(\" <td>\\n                    <input\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"username\\\"\\n                        class=\\\"form-control\\\"\\n                        v-model=\\\"name\\\"\\n                        name=\\\"name\\\"\\n                        v-validate=\\\"'required|max:10'\\\"\\n                        data-vv-as=\\\"ユーザーネーム\\\"\\n                        >\\n                    <div class=\\\"form-control-feedback\\\" v-show=\\\"errors.has('name')\\\">\\n                    <p class=\\\"alert alert-danger\\\">{{ errors.first('name') }}</p>\\n                    </div>\\n                </td> \"), _createCommentVNode(\" </tr>\\n            <tr>\\n                <th>Adress</th>\\n                <td><input v-model=\\\"editUserForm.address\\\" /></td>\\n            </tr>\\n            <tr>\\n                <th>Tel</th>\\n                <td><input v-model=\\\"editUserForm.tel\\\" /></td>\\n            </tr>\\n            <tr>\\n                <th>Country</th>\\n                <td>\\n                    <select v-model=\\\"editUserForm.country.code\\\" id=\\\"selectedCountryCode\\\">\\n                        <option \\n                            v-for=\\\"country in countryList\\\" v-bind:key=\\\"country.name\\\" v-bind:value=\\\"country.code\\\">\\n                            {{ country.name }}\\n                        </option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr class=\\\"button_align\\\">\\n                <td colspan=\\\"2\\\">\\n                    <button @click=\\\"update()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"> Confirm </button>\\n                </td>\\n            </tr>\\n        </table> \"), _createVNode(_component_router_link, {\n    to: \"/search\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Go to Search\")]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","for","value","disabled","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","errMessage","message","_hoisted_3","_createCommentVNode","_createVNode","_component_Form","onSubmit","$options","default","_withCtx","_hoisted_4","_component_Field","name","type","rules","validateEmail","_component_ErrorMessage","_hoisted_5","as","multiple","_hoisted_6","_Fragment","_renderList","_ctx","drinks","drink","key","selected","includes","_hoisted_7","_","_cache","$event","editUserForm","country","code","countryList","_hoisted_8","_hoisted_9","_component_router_link","to","_createTextVNode"],"sources":["/usr/src/app/src/pages/app/Edit.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <h3>Edit User </h3>    \n        <div v-show=\"errMessage\" class=\"alert alert-danger\">{{errMessage}}</div>\n        <div v-show=\"message\" class=\"alert alert-success\">{{ message }}</div>\n        <div id=\"app\">\n            <!-- <form> -->\n            <Form @submit=\"onSubmit\">\n                <div>\n                    <label class=\"label\" for=\"emailt\">Email</label>\n                    <Field name=\"email\" type=\"email\" :rules=\"validateEmail\" />\n                    <ErrorMessage name=\"email\" />\n                </div>\n                <div>\n                    <label class=\"label\" for=\"country\">Country</label>\n                    <Field v-slot=\"{ value }\" name=\"drink\" as=\"select\" multiple>\n                        <option value=\"\" disabled>Select a drink</option>\n                        <option v-for=\"drink in drinks\" :key=\"drink\" :value=\"drink\" :selected=\"value && value.includes(drink)\">{{ drink }}</option>\n                    </Field>\n\n                    <select v-model=\"editUserForm.country.code\" id=\"selectedCountryCode\">\n                        <option \n                            v-for=\"country in countryList\" v-bind:key=\"country.name\" v-bind:value=\"country.code\">\n                            {{ country.name }}\n                        </option>\n                    </select>\n                </div>\n                <button>Sign up</button>\n            </Form>\n                <!-- <form @submit=\"this.update()\">\n                <table class=\"table\">\n                    <tr>\n                        <th>Id</th>\n                        <td><input v-model=\"editUserForm.id\" disabled=\"true\"></td>\n                    </tr>\n                    <tr>\n                        <th>Name</th>\n                        <td><input type=\"text\" v-model=\"value\"/></td>\n                        <p>{{ value }}</p>\n                    </tr>\n                </table>\n                <button type=\"button\" class=\"btn btn-primary\"> Confirm </button>\n            </form> -->\n        </div>\n        <!-- <table class=\"table\">\n            <tr>\n                <th>Id</th>\n                <td><input v-model=\"editUserForm.id\" disabled=\"true\"></td>\n            </tr>\n            <tr>\n                <th>Name</th>\n                <td><input v-model=\"editUserForm.name\" /></td> -->\n                <!-- <td>\n                    <input\n                        type=\"text\"\n                        placeholder=\"username\"\n                        class=\"form-control\"\n                        v-model=\"name\"\n                        name=\"name\"\n                        v-validate=\"'required|max:10'\"\n                        data-vv-as=\"ユーザーネーム\"\n                        >\n                    <div class=\"form-control-feedback\" v-show=\"errors.has('name')\">\n                    <p class=\"alert alert-danger\">{{ errors.first('name') }}</p>\n                    </div>\n                </td> -->\n            <!-- </tr>\n            <tr>\n                <th>Adress</th>\n                <td><input v-model=\"editUserForm.address\" /></td>\n            </tr>\n            <tr>\n                <th>Tel</th>\n                <td><input v-model=\"editUserForm.tel\" /></td>\n            </tr>\n            <tr>\n                <th>Country</th>\n                <td>\n                    <select v-model=\"editUserForm.country.code\" id=\"selectedCountryCode\">\n                        <option \n                            v-for=\"country in countryList\" v-bind:key=\"country.name\" v-bind:value=\"country.code\">\n                            {{ country.name }}\n                        </option>\n                    </select>\n                </td>\n            </tr>\n            <tr class=\"button_align\">\n                <td colspan=\"2\">\n                    <button @click=\"update()\" type=\"button\" class=\"btn btn-primary\"> Confirm </button>\n                </td>\n            </tr>\n        </table> -->\n        <router-link to=\"/search\">Go to Search</router-link>\n\n    </div>\n</template>\n\n<script>\n  import { ref } from 'vue';\n  import axios from \"axios\";\n  import { Form, Field, ErrorMessage } from 'vee-validate';\n  export default {\n    name: 'editUser',\n    props: {\n      id: String\n    },\n    components: {\n        Form,\n        Field,\n        ErrorMessage\n    },\n    data(){\n        return{\n            editUserForm: {\n                id: null,\n                name: null,\n                tel: null,\n                address: null,\n                country : {\n                    name: null,\n                    code: null\n                }\n            },\n            id : \"\",\n            countryList: [], \n            message : \"\",\n            errMessage :\"\"\n        }\n    },\n    created() {\n        this.id = this.$route.params.id;\n        this.getResults();\n        this.init();\n    },\n    methods: {\n//--- \n        onSubmit(values) {\n            console.log(JSON.stringify(values, null, 2));\n        },\n        validateEmail(value) {\n            // if the field is empty\n            if (!value) {\n                return 'This field is required';\n            }\n            // if the field is not a valid email\n            const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n            if (!regex.test(value)) {\n                return 'This field must be a valid email';\n            }\n            // All is good\n            return true;\n        },\n        isRequired(value) {\n            if (value && value.trim()) {\n                return true;\n            }\n            return 'This is required';\n        },\n        getResults() {\n            axios\n            .get('http://localhost:8080/edit/'+ this.id)\n            .then(\n                response => {this.editUserForm = response.data;} \n            ).catch(\n                error => { this.errMessage = \"Failed to find user\"; }\n            );    \n        },\n        update() {\n            this.editUserForm.country.name = \"\";\n            axios\n            .post('http://localhost:8080/update', this.editUserForm)\n            .then(\n                response => {\n                    this.editUserForm = response.data;\n                    this.message=\"The update has been completed\";\n                } \n            ).catch(\n                error => {\n                    if (error.response.status) {\n                        this.errMessage = `update:status: ${error.response.status}, message: ${error.response.data}`;\n                    } else {\n                        this.errMessage = `Fail to edit user`;\n                    }\n                }\n            );    \n        },\n        init () {\n            axios.get('http://localhost:8080/init')\n            .then (\n                response => {\n                    this.countryList = response.data;\n                } \n            ).catch (\n                error => {\n                    if (error.response.status) {\n                        this.errMessage = `init:status: ${error.response.status}, message: ${error.response.data}`;\n                    } else {\n                        this.errMessage = `Fail to get country List`;\n                    }\n                }\n            ); \n        },\n    }\n  }\n  </script>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAS;gCAChBC,mBAAA,CAAmB,YAAf,YAAU;;EAGTC,EAAE,EAAC;AAAK;gCAIDD,mBAAA,CAA+C;EAAxCD,KAAK,EAAC,OAAO;EAACG,GAAG,EAAC;GAAS,OAAK;gCAKvCF,mBAAA,CAAkD;EAA3CD,KAAK,EAAC,OAAO;EAACG,GAAG,EAAC;GAAU,SAAO;gCAEtCF,mBAAA,CAAiD;EAAzCG,KAAK,EAAC,EAAE;EAACC,QAAQ,EAAR;GAAS,gBAAc;mBAhBhE;mBAAA;gCA2BgBJ,mBAAA,CAAwB,gBAAhB,SAAO;;;;;;uBA1B3BK,mBAAA,CA6FM,OA7FNC,UA6FM,GA5FFC,UAAmB,E,gBACnBP,mBAAA,CAAwE;IAA/CD,KAAK,EAAC;EAAoB,GAAAS,gBAAA,CAAGC,KAAA,CAAAC,UAAU,iC,SAAnDD,KAAA,CAAAC,UAAU,E,mBACvBV,mBAAA,CAAqE;IAA/CD,KAAK,EAAC;EAAqB,GAAAS,gBAAA,CAAIC,KAAA,CAAAE,OAAO,iC,SAA/CF,KAAA,CAAAE,OAAO,E,GACpBX,mBAAA,CAsCM,OAtCNY,UAsCM,GArCFC,mBAAA,YAAe,EACfC,YAAA,CAqBOC,eAAA;IArBAC,QAAM,EAAEC,QAAA,CAAAD;EAAQ;IAPnCE,OAAA,EAAAC,QAAA,CAQgB,MAIM,CAJNnB,mBAAA,CAIM,cAHFoB,UAA+C,EAC/CN,YAAA,CAA0DO,gBAAA;MAAnDC,IAAI,EAAC,OAAO;MAACC,IAAI,EAAC,OAAO;MAAEC,KAAK,EAAEP,QAAA,CAAAQ;wCACzCX,YAAA,CAA6BY,uBAAA;MAAfJ,IAAI,EAAC;IAAO,G,GAE9BtB,mBAAA,CAaM,cAZF2B,UAAkD,EAClDb,YAAA,CAGQO,gBAAA;MAHkBC,IAAI,EAAC,OAAO;MAACM,EAAE,EAAC,QAAQ;MAACC,QAAQ,EAAR;;MAfvEX,OAAA,EAAAC,QAAA,CAgBwB,CAAiD;QADpChB;MAAK,OAClB2B,UAAiD,G,kBACjDzB,mBAAA,CAA2H0B,SAAA,QAjBnJC,WAAA,CAiBgDC,IAAA,CAAAC,MAAM,EAAfC,KAAK;6BAApB9B,mBAAA,CAA2H;UAA1F+B,GAAG,EAAED,KAAK;UAAGhC,KAAK,EAAEgC,KAAK;UAAGE,QAAQ,EAAElC,KAAK,IAAIA,KAAK,CAACmC,QAAQ,CAACH,KAAK;4BAAMA,KAAK,wBAjBvII,UAAA;;MAAAC,CAAA;wBAoBoBxC,mBAAA,CAKS;MAzB7B,uBAAAyC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoBqCjC,KAAA,CAAAkC,YAAY,CAACC,OAAO,CAACC,IAAI,GAAAH,MAAA;MAAEzC,EAAE,EAAC;2BAC3CI,mBAAA,CAGS0B,SAAA,QAxBjCC,WAAA,CAsB8CvB,KAAA,CAAAqC,WAAW,EAAtBF,OAAO;2BADlBvC,mBAAA,CAGS;QAFiC+B,GAAG,EAAEQ,OAAO,CAACtB,IAAI;QAASnB,KAAK,EAAEyC,OAAO,CAACC;0BAC5ED,OAAO,CAACtB,IAAI,wBAvB3CyB,UAAA;6EAoBqCtC,KAAA,CAAAkC,YAAY,CAACC,OAAO,CAACC,IAAI,E,KAO9CG,UAAwB,C;IA3BxCR,CAAA;mCA6BgB3B,mBAAA,ylBAaO,C,GAEfA,mBAAA,kSAO0D,EAClDA,mBAAA,qmBAaS,EACbA,mBAAA,i/BAyBQ,EACZC,YAAA,CAAoDmC,sBAAA;IAAvCC,EAAE,EAAC;EAAS;IA5FjChC,OAAA,EAAAC,QAAA,CA4FkC,MAAY,CA5F9CgC,gBAAA,CA4FkC,cAAY,E;IA5F9CX,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}