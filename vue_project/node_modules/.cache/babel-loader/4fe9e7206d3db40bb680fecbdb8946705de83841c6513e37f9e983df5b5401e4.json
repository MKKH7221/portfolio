{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      message: \"\",\n      countryList: [],\n      // search condition\n      selectedCountry: \"\"\n    };\n  },\n  mounted() {\n    axios.get('http://localhost:8080/init').then(response => {\n      alert(response.data.length);\n      this.countryList = response.data;\n    }).catch(error => {\n      this.message = `init:status: ${error.response.status}, message: ${error.response.data}`;\n    });\n  },\n  methods: {\n    search() {\n      axios.get('http://localhost:8080/search').then(response => {\n        this.user = response.data;\n        // for (let i=0; i<response.data.length; i++) {\n        //     this.users.push(response.data[i]);\n        //     console.log(this.users[i]);\n        // }\n      }).catch(error => {\n        this.message = `status: ${error.response.status}, message: ${error.response.data}`;\n      });\n    },\n    deleteUser(paramId, paramName) {\n      console.log(paramId);\n      console.log(paramName);\n      const params = {\n        id: paramId\n      };\n      axios.delete('http://localhost:8080/delete', {\n        params\n      }).then(response => {\n        this.message = \"Successfully deleted user\" + paramName;\n        this.search();\n      }).catch(error => {\n        this.message = `status: ${error.response.status}, message: ${error.response.data}`;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","users","message","countryList","selectedCountry","mounted","get","then","response","alert","length","catch","error","status","methods","search","user","deleteUser","paramId","paramName","console","log","params","id","delete"],"sources":["/usr/src/app/src/pages/app/Search.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <h3>User List</h3>\n        <!-- search condition -->\n        <dev class=\"condition search-condition-div\" >\n            <h3> search condition</h3>\n            <br>\n            <select v-model=\"selectedCountry\">\n                <option disabled value=\"\">Country</option>\n                <option v-for=\"country in countryList\" \n                    v-bind:value=\"country.name\" \n                    v-bind:key=\"country.code\">\n                    {{ country.name }}\n                </option>\n            </select>\n            <br>\n            <button @click=\"search\" type=\"button\" class=\"btn btn-primary\">Search</button>\n        </dev>    \n        <!-- for message -->\n        <div v-show=\"message\" class=\"alert alert-danger\">{{message}}</div>\n        <!-- user List -->\n        <table class=\"table\">\n            <thead>\n                <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Address</th>\n                <th scope=\"col\">Tel</th>\n                <th scope=\"col\">Country</th>\n                </tr>\n            </thead>\n            <tbody>   \n                <tr v-for=\"user in users\" :key=\"user.message\">\n                    <th scope=\"row\">{{user.id}}</th>\n                    <td>{{user.name}}</td>\n                    <td>{{user.address}}</td>\n                    <td>{{user.tel}}</td>\n                    <td>{{user.country.name}}</td>\n                    <td>\n                        <button @click=\"() => $router.push({ name: 'Edit', params: {id: user.id }})\" \n                            type=\"button\" class=\"btn btn-primary\">Edit\n                        </button>\n                    </td>\n                    <td>    \n                        <button @click=\"deleteUser(user.id, user.name)\" type=\"button\" \n                        class=\"btn btn-primary\">Delete</button>\n                    </td>\n                </tr>   \n            </tbody>\n        </table>\n        <span>\n            <button @click=\"()=>$router.push({ name: 'Add'})\" type=\"button\" class=\"btn btn-primary\"> User Add </button>\n        </span>\n    </div>\n</template>\n<script>\n    import axios from 'axios';\n    export default {\n        data(){\n            return{\n                users: [],\n                message: \"\",\n                countryList: [],\n                // search condition\n                selectedCountry: \"\"\n            }\n        },\n        mounted(){\n            axios.get('http://localhost:8080/init')\n                .then (\n                    response => {\nalert(response.data.length)\n                        this.countryList = response.data;\n                    } \n                ).catch (\n                    error => {\n                        this.message = `init:status: ${error.response.status}, message: ${error.response.data}`;\n                    }\n                ); \n        },\n        methods: {\n            search (){\n                axios\n                .get('http://localhost:8080/search')\n                .then(\n                    response => {\n                        this.user = response.data;\n                        // for (let i=0; i<response.data.length; i++) {\n                        //     this.users.push(response.data[i]);\n                        //     console.log(this.users[i]);\n                        // }\n                    } \n                ).catch(\n                    error => {\n                        this.message = `status: ${error.response.status}, message: ${error.response.data}`;\n                    }\n                );\n            },\n            deleteUser(paramId, paramName) {\n                console.log(paramId);\n                console.log(paramName);\n                const params = { id: paramId };\n                axios\n                .delete('http://localhost:8080/delete', { params })\n                .then(\n                    response => {\n                        this.message = \"Successfully deleted user\" + paramName;\n                        this.search();\n                    } \n                ).catch(\n                    error => {\n                        this.message = `status: ${error.response.status}, message: ${error.response.data}`;\n                    }\n                );\n            }\n        }\n    }\n</script>\n<style>\n.material-symbols-outlined {\n  font-variation-settings:\n  'FILL' 0,\n  'wght' 400,\n  'GRAD' 0,\n  'opsz' 24\n}\n.search-condition-div {\n    width: 500px;\n  border: solid 1px gray;\n  }\n</style>\n"],"mappings":"AAwDI,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACf;MACAC,eAAe,EAAE;IACrB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAE;IACLN,KAAK,CAACO,GAAG,CAAC,4BAA4B,EACjCC,IAAG,CACAC,QAAO,IAAK;MAChCC,KAAK,CAACD,QAAQ,CAACR,IAAI,CAACU,MAAM;MACF,IAAI,CAACP,WAAU,GAAIK,QAAQ,CAACR,IAAI;IACpC,CACJ,CAAC,CAACW,KAAI,CACFC,KAAI,IAAK;MACL,IAAI,CAACV,OAAM,GAAK,gBAAeU,KAAK,CAACJ,QAAQ,CAACK,MAAO,cAAaD,KAAK,CAACJ,QAAQ,CAACR,IAAK,EAAC;IAC3F,CACJ,CAAC;EACT,CAAC;EACDc,OAAO,EAAE;IACLC,MAAKA,CAAA,EAAI;MACLhB,KAAI,CACHO,GAAG,CAAC,8BAA8B,EAClCC,IAAI,CACDC,QAAO,IAAK;QACR,IAAI,CAACQ,IAAG,GAAIR,QAAQ,CAACR,IAAI;QACzB;QACA;QACA;QACA;MACJ,CACJ,CAAC,CAACW,KAAK,CACHC,KAAI,IAAK;QACL,IAAI,CAACV,OAAM,GAAK,WAAUU,KAAK,CAACJ,QAAQ,CAACK,MAAO,cAAaD,KAAK,CAACJ,QAAQ,CAACR,IAAK,EAAC;MACtF,CACJ,CAAC;IACL,CAAC;IACDiB,UAAUA,CAACC,OAAO,EAAEC,SAAS,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpBE,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;MACtB,MAAMG,MAAK,GAAI;QAAEC,EAAE,EAAEL;MAAQ,CAAC;MAC9BnB,KAAI,CACHyB,MAAM,CAAC,8BAA8B,EAAE;QAAEF;MAAO,CAAC,EACjDf,IAAI,CACDC,QAAO,IAAK;QACR,IAAI,CAACN,OAAM,GAAI,2BAA0B,GAAIiB,SAAS;QACtD,IAAI,CAACJ,MAAM,CAAC,CAAC;MACjB,CACJ,CAAC,CAACJ,KAAK,CACHC,KAAI,IAAK;QACL,IAAI,CAACV,OAAM,GAAK,WAAUU,KAAK,CAACJ,QAAQ,CAACK,MAAO,cAAaD,KAAK,CAACJ,QAAQ,CAACR,IAAK,EAAC;MACtF,CACJ,CAAC;IACL;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}