{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"th\", null, \" ID\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"th\", null, \" Name\", -1 /* HOISTED */);\nconst _hoisted_5 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Edit \" + _toDisplayString(this.$route.params.id), 1 /* TEXT */), _createElementVNode(\"table\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.text = $event),\n    disabled: \"true\",\n    value: $data.user.id\n  }, null, 8 /* PROPS */, _hoisted_3), [[_vModelText, _ctx.text]])])]), _createElementVNode(\"tr\", null, [_hoisted_4, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.text = $event),\n    value: $data.user.name\n  }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, _ctx.text]])])])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.update()),\n    type: \"button\",\n    class: \"btn-primary\"\n  }, \"Confirm \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$route","params","id","_hoisted_2","_ctx","text","$event","disabled","value","$data","user","_hoisted_4","name","onClick","_cache","$options","update","type"],"sources":["/usr/src/app/src/pages/app/Edit.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <h1>Edit {{ this.$route.params.id }} </h1>\n\n        <table>\n            <tr>\n                <th> ID</th>\n                <td><input v-model=\"text\" disabled=\"true\" v-bind:value=\"user.id\"></td>\n            </tr>\n            <tr>\n                <th> Name</th>\n                <td><input  v-model=\"text\" v-bind:value=\"user.name\" /></td>\n            </tr>\n        </table>\n        <button \n            @click=\"update()\" \n            type=\"button\"\n            class=\"btn-primary\">Confirm\n        </button>\n    </div>\n</template>\n  \n  <script>\n  import { ref } from 'vue';\n  import axios from \"axios\";\n  export default {\n    name: 'detail',\n    props: {\n      // params for Edit page\n      id: String\n    },\n    data(){\n      return{\n        user: {\n            id: null,\n            name: null\n        },\n        searchId: null\n      }\n    },\n    created() {\n        this.searchId = this.$route.params.id;\n        console.log('params what we get is === ' + this.searchId);\n        this.getResults(this.searchId);\n    },\n    methods: {\n        getResults(q) {\n            axios\n            .get('http://localhost:8080/detail', {params:  {id: q}})\n                .then(\n                    response => {\n                        this.user.id = response.data.id;\n                        this.user.name = response.data.name;\n                        console.log(this.user);\n                    } \n                ).catch(\n                    error => {\n                        console.debug('error');\n                        this.user.id = 2;\n                        this.user.name = \"Jirou\";\n                        console.log('error users: ' + this.user);\n                    }\n                );    \n        },\n        update() {\n            axios\n            .post('http://localhost:8080/update',{ \n              params: {\n                id: this.user.id,\n                name: this.user.name\n              }\n            })\n            .then(\n                response => {\n                    this.user.id = response.data.id;\n                    this.user.name = response.data.name;\n                    console.log(response.data.name);\n                    alert(\"登録が完了しました\");\n                } \n            ).catch(\n                error => {\n                    console.log('error users: ' + this.user.name);\n                    console.debug('error');\n                    this.user.id = 2;\n                    this.user.name = \"Jirou\";\n                    console.log('error users: ' + this.user.name);\n                }\n            );    \n        },\n    }\n  }\n  </script>\n  \n  <style>\n  table, th, td {\n    border: 1px solid black;\n    border-collapse: collapse;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAS;gCAKRC,mBAAA,CAAY,YAAR,KAAG;;gCAIPA,mBAAA,CAAc,YAAV,OAAK;;;uBATrBC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBFF,mBAAA,CAA0C,YAAtC,OAAK,GAAAG,gBAAA,MAAQC,MAAM,CAACC,MAAM,CAACC,EAAE,kBAEjCN,mBAAA,CASQ,gBARJA,mBAAA,CAGK,aAFDO,UAAY,EACZP,mBAAA,CAAsE,a,gBAAlEA,mBAAA,CAA6D;+DAA7CQ,IAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,QAAQ,EAAC,MAAM;IAAQC,KAAK,EAAEC,KAAA,CAAAC,IAAI,CAACR;sDAAzCE,IAAA,CAAAC,IAAI,E,OAE5BT,mBAAA,CAGK,aAFDe,UAAc,EACdf,mBAAA,CAA2D,a,gBAAvDA,mBAAA,CAAkD;+DAAjCQ,IAAA,CAAAC,IAAI,GAAAC,MAAA;IAASE,KAAK,EAAEC,KAAA,CAAAC,IAAI,CAACE;sDAAzBR,IAAA,CAAAC,IAAI,E,SAGjCT,mBAAA,CAIS;IAHJiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAAES,QAAA,CAAAC,MAAM;IACdC,IAAI,EAAC,QAAQ;IACbtB,KAAK,EAAC;KAAc,UACxB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}