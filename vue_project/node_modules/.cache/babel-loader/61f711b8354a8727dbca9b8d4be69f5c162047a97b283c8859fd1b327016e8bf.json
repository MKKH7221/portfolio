{"ast":null,"code":"import { ref } from 'vue';\nimport axios from \"axios\";\nimport useVuelidate from '@vuelidate/core';\nimport { required, numeric, maxLength, helpers } from '@vuelidate/validators';\nexport default {\n  name: 'addUser',\n  data() {\n    return {\n      form: {\n        name: \"\",\n        address: \"\",\n        tel: \"\",\n        countryCode: \"\"\n      },\n      errMessage: \"\",\n      message: \"\",\n      countryList: []\n    };\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    addUser() {\n      axios.post(\"http://localhost:8080/add\", this.form).then(response => {\n        this.form.name = null;\n        this.form.address = null;\n        this.form.countryCode = null;\n        this.form.tel = null;\n        this.message = \"The user have successfully created\";\n      }).catch(error => {\n        if (error.response.status) {\n          this.message = `status: ${error.response.status}, message: ${error.response.data}`;\n        } else {\n          this.message = `Failed to create user`;\n        }\n      });\n    },\n    init() {\n      axios.get('http://localhost:8080/init').then(response => {\n        this.countryList = response.data;\n      }).catch(error => {\n        this.errMessage = `Faild to get countryList`;\n      });\n    }\n  }\n};","map":{"version":3,"names":["ref","axios","useVuelidate","required","numeric","maxLength","helpers","name","data","form","address","tel","countryCode","errMessage","message","countryList","created","init","methods","addUser","post","then","response","catch","error","status","get"],"sources":["/usr/src/app/src/pages/app/Add.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n      <h3>Create User</h3>\n      <div v-show=\"errMessage\" class=\"alert alert-danger\">{{errMessage}}</div>\n      <div v-show=\"message\" class=\"alert alert-success\">{{ message }}</div>\n      <form v-on:submit.prevent=\"addUser\">\n        <!-- name -->\n        <div class=\"form-group\" :class=\"{ error: v$.form.name.$errors.length }\">\n            <label for=\"\">Name</label>\n            <input class=\"form-control\" placeholder=\"Enter your username\" type=\"name\" v-model=\"v$.form.name.$model\">\n            <!-- <div class=\"pre-icon os-icon os-icon-user-male-circle\"></div> -->\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.form.name.$errors\" :key=\"index\">\n                <div class=\"error-msg\">{{ error.$message }}</div>\n            </div>\n        </div>\n        <br>\n        <!-- address -->\n        <div class=\"form-group\" :class=\"{ error: v$.form.address.$errors.length }\">\n            <label for=\"\">Address</label>\n            <input class=\"form-control\" placeholder=\"Enter your address\" type=\"address\" v-model=\"v$.form.address.$model\">\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.form.address.$errors\" :key=\"index\">\n                <div class=\"error-msg\">{{ error.$message }}</div>\n            </div>\n        </div>\n        <br>\n        <!-- tel -->\n        <div class=\"form-group\" :class=\"{ error: v$.form.tel.$errors.length }\">\n            <label for=\"\">Tel</label>\n            <input class=\"form-control\" placeholder=\"Enter your tel\" type=\"tel\" v-model=\"v$.form.tel.$model\">\n            <!-- error message -->\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.form.tel.$errors\" :key=\"index\">\n                <div class=\"error-msg\">{{ error.$message }}</div>\n            </div>\n        </div>\n        <br>\n        <!-- country -->\n        <div class=\"form-group\" :class=\"{ error: v$.form.countryCode.$errors.length }\">\n            <label for=\"\">Country</label>\n            <select class=\"form-control\" type=\"country.code\" v-model=\"v$.form.country.code.$model\">\n                <option value=\"\" placeholder=\"Select a country\" > Select a country </option>\n                <option v-for=\"country in countryList\" \n                    v-bind:key=\"country.code\" v-bind:value=\"country.code\">\n                    {{ country.name }}\n                </option>\n            </select>\n            <!-- error message -->\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.form.country.code.$errors\" :key=\"index\">\n                <div class=\"error-msg\">{{ error.$message }}</div>\n            </div>\n        </div>\n        <br>                    \n        <p class=\"button_align\">\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"v$.$invalid\">Confirm</button>\n        </p>\n      </form>\n  </div>\n</template>\n  \n  <script>\n  import { ref } from 'vue';\n  import axios from \"axios\";\n  import useVuelidate from '@vuelidate/core'\n  import { required, numeric, maxLength, helpers} from '@vuelidate/validators'\n  export default {\n    name: 'addUser',\n    data(){\n        return{\n          form: {\n            name: \"\",\n            address: \"\",\n            tel: \"\",\n            countryCode: \"\"\n          },   \n          errMessage : \"\",\n          message : \"\",\n          countryList: []\n        }\n    },\n    created() {\n        this.init();\n    },\n    methods: {\n        addUser() {\n          axios\n          .post(\"http://localhost:8080/add\", this.form)\n          .then(\n            response => {\n              this.form.name = null;\n              this.form.address = null;\n              this.form.countryCode = null;\n              this.form.tel = null;\n              this.message = \"The user have successfully created\";\n            } \n          ).catch(\n            error => {\n                if (error.response.status) {\n                  this.message = `status: ${error.response.status}, message: ${error.response.data}`;\n                } else {\n                  this.message = `Failed to create user`;\n                }\n            }\n          );    \n        },\n        init () {\n            axios.get('http://localhost:8080/init')\n            .then (\n                response => {\n                    this.countryList = response.data;\n                } \n            ).catch (\n                error => {\n                    this.errMessage = `Faild to get countryList`;\n                }\n            ); \n        }\n    }\n    \n  }\n  </script>\n  \n  <style>\n  /*CSSを記載*/\n  </style>\n  "],"mappings":"AA2DE,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,iBAAgB;AACzC,SAASC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAEC,OAAO,QAAO,uBAAsB;AAC3E,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAE;IACF,OAAM;MACJC,IAAI,EAAE;QACJF,IAAI,EAAE,EAAE;QACRG,OAAO,EAAE,EAAE;QACXC,GAAG,EAAE,EAAE;QACPC,WAAW,EAAE;MACf,CAAC;MACDC,UAAS,EAAI,EAAE;MACfC,OAAM,EAAI,EAAE;MACZC,WAAW,EAAE;IACf;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,IAAI,CAAC,CAAC;EACf,CAAC;EACDC,OAAO,EAAE;IACLC,OAAOA,CAAA,EAAG;MACRlB,KAAI,CACHmB,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAACX,IAAI,EAC3CY,IAAI,CACHC,QAAO,IAAK;QACV,IAAI,CAACb,IAAI,CAACF,IAAG,GAAI,IAAI;QACrB,IAAI,CAACE,IAAI,CAACC,OAAM,GAAI,IAAI;QACxB,IAAI,CAACD,IAAI,CAACG,WAAU,GAAI,IAAI;QAC5B,IAAI,CAACH,IAAI,CAACE,GAAE,GAAI,IAAI;QACpB,IAAI,CAACG,OAAM,GAAI,oCAAoC;MACrD,CACF,CAAC,CAACS,KAAK,CACLC,KAAI,IAAK;QACL,IAAIA,KAAK,CAACF,QAAQ,CAACG,MAAM,EAAE;UACzB,IAAI,CAACX,OAAM,GAAK,WAAUU,KAAK,CAACF,QAAQ,CAACG,MAAO,cAAaD,KAAK,CAACF,QAAQ,CAACd,IAAK,EAAC;QACpF,OAAO;UACL,IAAI,CAACM,OAAM,GAAK,uBAAsB;QACxC;MACJ,CACF,CAAC;IACH,CAAC;IACDG,IAAGA,CAAA,EAAK;MACJhB,KAAK,CAACyB,GAAG,CAAC,4BAA4B,EACrCL,IAAG,CACAC,QAAO,IAAK;QACR,IAAI,CAACP,WAAU,GAAIO,QAAQ,CAACd,IAAI;MACpC,CACJ,CAAC,CAACe,KAAI,CACFC,KAAI,IAAK;QACL,IAAI,CAACX,UAAS,GAAK,0BAAyB;MAChD,CACJ,CAAC;IACL;EACJ;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}