{"ast":null,"code":"import { ref } from 'vue';\nimport axios from \"axios\";\nimport { useField } from 'vee-validate';\nconst {\n  value,\n  errorMessage\n} = useField('name', value => {\n  if (!value) {\n    return 'this field is required';\n  }\n  return true;\n});\nexport default {\n  name: 'editUser',\n  props: {\n    id: String\n  },\n  data() {\n    return {\n      editUserForm: {\n        id: null,\n        name: null,\n        tel: null,\n        address: null,\n        country: {\n          name: null,\n          code: null\n        }\n      },\n      id: \"\",\n      countryList: [],\n      message: \"\",\n      errMessage: \"\",\n      validateName: \"\"\n    };\n  },\n  created() {\n    this.id = this.$route.params.id;\n    this.getResults();\n    this.init();\n  },\n  methods: {\n    getResults() {\n      axios.get('http://localhost:8080/edit/' + this.id).then(response => {\n        this.editUserForm = response.data;\n      }).catch(error => {\n        this.errMessage = \"Failed to find user\";\n      });\n    },\n    update() {\n      this.editUserForm.country.name = \"\";\n      axios.post('http://localhost:8080/update', this.editUserForm).then(response => {\n        this.editUserForm = response.data;\n        this.message = \"The update has been completed\";\n      }).catch(error => {\n        if (error.response.status) {\n          this.errMessage = `update:status: ${error.response.status}, message: ${error.response.data}`;\n        } else {\n          this.errMessage = `Fail to edit user`;\n        }\n      });\n    },\n    init() {\n      axios.get('http://localhost:8080/init').then(response => {\n        this.countryList = response.data;\n      }).catch(error => {\n        if (error.response.status) {\n          this.errMessage = `init:status: ${error.response.status}, message: ${error.response.data}`;\n        } else {\n          this.errMessage = `Fail to get country List`;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ref","axios","useField","value","errorMessage","name","props","id","String","data","editUserForm","tel","address","country","code","countryList","message","errMessage","validateName","created","$route","params","getResults","init","methods","get","then","response","catch","error","update","post","status"],"sources":["/usr/src/app/src/pages/app/Edit.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <h3>Edit User </h3>    \n        <div v-show=\"errMessage\" class=\"alert alert-danger\">{{errMessage}}</div>\n        <div v-show=\"message\" class=\"alert alert-success\">{{ message }}</div>\n        <div id=\"app\">\n            <form>\n                <!-- <form @submit=\"this.update()\"> -->\n                <table class=\"table\">\n                    <tr>\n                        <th>Id</th>\n                        <td><input v-model=\"editUserForm.id\" disabled=\"true\"></td>\n                    </tr>\n                    <tr>\n                        <th>Name</th>\n                        <td><input type=\"text\" v-model=\"value\" /></td>\n                        <p>{{ value }}</p>\n                        <p>{{ errorMessage }}</p>\n                    </tr>\n                </table>\n                <button type=\"button\" class=\"btn btn-primary\"> Confirm </button>\n            </form>\n        </div>\n        <!-- <table class=\"table\">\n            <tr>\n                <th>Id</th>\n                <td><input v-model=\"editUserForm.id\" disabled=\"true\"></td>\n            </tr>\n            <tr>\n                <th>Name</th>\n                <td><input v-model=\"editUserForm.name\" /></td> -->\n                <!-- <td>\n                    <input\n                        type=\"text\"\n                        placeholder=\"username\"\n                        class=\"form-control\"\n                        v-model=\"name\"\n                        name=\"name\"\n                        v-validate=\"'required|max:10'\"\n                        data-vv-as=\"ユーザーネーム\"\n                        >\n                    <div class=\"form-control-feedback\" v-show=\"errors.has('name')\">\n                    <p class=\"alert alert-danger\">{{ errors.first('name') }}</p>\n                    </div>\n                </td> -->\n            <!-- </tr>\n            <tr>\n                <th>Adress</th>\n                <td><input v-model=\"editUserForm.address\" /></td>\n            </tr>\n            <tr>\n                <th>Tel</th>\n                <td><input v-model=\"editUserForm.tel\" /></td>\n            </tr>\n            <tr>\n                <th>Country</th>\n                <td>\n                    <select v-model=\"editUserForm.country.code\" id=\"selectedCountryCode\">\n                        <option \n                            v-for=\"country in countryList\" v-bind:key=\"country.name\" v-bind:value=\"country.code\">\n                            {{ country.name }}\n                        </option>\n                    </select>\n                </td>\n            </tr>\n            <tr class=\"button_align\">\n                <td colspan=\"2\">\n                    <button @click=\"update()\" type=\"button\" class=\"btn btn-primary\"> Confirm </button>\n                </td>\n            </tr>\n        </table> -->\n        <router-link to=\"/search\">Go to Search</router-link>\n\n    </div>\n</template>\n\n<script>\n  import { ref } from 'vue';\n  import axios from \"axios\";\n  import { useField } from 'vee-validate';\n\n    const { value, errorMessage } = useField('name', (value) => {\n        if (!value) {\n            return 'this field is required';\n        }\n        return true;\n    });\n\n  export default {\n    name: 'editUser',\n    props: {\n      id: String\n    },\n    data(){\n        return{\n            editUserForm: {\n                id: null,\n                name: null,\n                tel: null,\n                address: null,\n                country : {\n                    name: null,\n                    code: null\n                }\n            },\n            id : \"\",\n            countryList: [], \n            message : \"\",\n            errMessage :\"\",\n            validateName: \"\"\n        }\n    },\n    created() {\n        this.id = this.$route.params.id;\n        this.getResults();\n        this.init();\n    },\n    methods: {\n        getResults() {\n            axios\n            .get('http://localhost:8080/edit/'+ this.id)\n            .then(\n                response => {this.editUserForm = response.data;} \n            ).catch(\n                error => { this.errMessage = \"Failed to find user\"; }\n            );    \n        },\n        update() {\n            this.editUserForm.country.name = \"\";\n            axios\n            .post('http://localhost:8080/update', this.editUserForm)\n            .then(\n                response => {\n                    this.editUserForm = response.data;\n                    this.message=\"The update has been completed\";\n                } \n            ).catch(\n                error => {\n                    if (error.response.status) {\n                        this.errMessage = `update:status: ${error.response.status}, message: ${error.response.data}`;\n                    } else {\n                        this.errMessage = `Fail to edit user`;\n                    }\n                }\n            );    \n        },\n        init () {\n            axios.get('http://localhost:8080/init')\n            .then (\n                response => {\n                    this.countryList = response.data;\n                } \n            ).catch (\n                error => {\n                    if (error.response.status) {\n                        this.errMessage = `init:status: ${error.response.status}, message: ${error.response.data}`;\n                    } else {\n                        this.errMessage = `Fail to get country List`;\n                    }\n                }\n            ); \n        }\n    }\n  }\n  </script>\n"],"mappings":"AA6EE,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,QAAO,QAAS,cAAc;AAErC,MAAM;EAAEC,KAAK;EAAEC;AAAa,IAAIF,QAAQ,CAAC,MAAM,EAAGC,KAAK,IAAK;EACxD,IAAI,CAACA,KAAK,EAAE;IACR,OAAO,wBAAwB;EACnC;EACA,OAAO,IAAI;AACf,CAAC,CAAC;AAEJ,eAAe;EACbE,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,EAAE,EAAEC;EACN,CAAC;EACDC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,YAAY,EAAE;QACVH,EAAE,EAAE,IAAI;QACRF,IAAI,EAAE,IAAI;QACVM,GAAG,EAAE,IAAI;QACTC,OAAO,EAAE,IAAI;QACbC,OAAM,EAAI;UACNR,IAAI,EAAE,IAAI;UACVS,IAAI,EAAE;QACV;MACJ,CAAC;MACDP,EAAC,EAAI,EAAE;MACPQ,WAAW,EAAE,EAAE;MACfC,OAAM,EAAI,EAAE;MACZC,UAAS,EAAG,EAAE;MACdC,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACZ,EAAC,GAAI,IAAI,CAACa,MAAM,CAACC,MAAM,CAACd,EAAE;IAC/B,IAAI,CAACe,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,IAAI,CAAC,CAAC;EACf,CAAC;EACDC,OAAO,EAAE;IACLF,UAAUA,CAAA,EAAG;MACTrB,KAAI,CACHwB,GAAG,CAAC,6BAA6B,GAAE,IAAI,CAAClB,EAAE,EAC1CmB,IAAI,CACDC,QAAO,IAAK;QAAC,IAAI,CAACjB,YAAW,GAAIiB,QAAQ,CAAClB,IAAI;MAAC,CACnD,CAAC,CAACmB,KAAK,CACHC,KAAI,IAAK;QAAE,IAAI,CAACZ,UAAS,GAAI,qBAAqB;MAAE,CACxD,CAAC;IACL,CAAC;IACDa,MAAMA,CAAA,EAAG;MACL,IAAI,CAACpB,YAAY,CAACG,OAAO,CAACR,IAAG,GAAI,EAAE;MACnCJ,KAAI,CACH8B,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAACrB,YAAY,EACtDgB,IAAI,CACDC,QAAO,IAAK;QACR,IAAI,CAACjB,YAAW,GAAIiB,QAAQ,CAAClB,IAAI;QACjC,IAAI,CAACO,OAAO,GAAC,+BAA+B;MAChD,CACJ,CAAC,CAACY,KAAK,CACHC,KAAI,IAAK;QACL,IAAIA,KAAK,CAACF,QAAQ,CAACK,MAAM,EAAE;UACvB,IAAI,CAACf,UAAS,GAAK,kBAAiBY,KAAK,CAACF,QAAQ,CAACK,MAAO,cAAaH,KAAK,CAACF,QAAQ,CAAClB,IAAK,EAAC;QAChG,OAAO;UACH,IAAI,CAACQ,UAAS,GAAK,mBAAkB;QACzC;MACJ,CACJ,CAAC;IACL,CAAC;IACDM,IAAGA,CAAA,EAAK;MACJtB,KAAK,CAACwB,GAAG,CAAC,4BAA4B,EACrCC,IAAG,CACAC,QAAO,IAAK;QACR,IAAI,CAACZ,WAAU,GAAIY,QAAQ,CAAClB,IAAI;MACpC,CACJ,CAAC,CAACmB,KAAI,CACFC,KAAI,IAAK;QACL,IAAIA,KAAK,CAACF,QAAQ,CAACK,MAAM,EAAE;UACvB,IAAI,CAACf,UAAS,GAAK,gBAAeY,KAAK,CAACF,QAAQ,CAACK,MAAO,cAAaH,KAAK,CAACF,QAAQ,CAAClB,IAAK,EAAC;QAC9F,OAAO;UACH,IAAI,CAACQ,UAAS,GAAK,0BAAyB;QAChD;MACJ,CACJ,CAAC;IACL;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}