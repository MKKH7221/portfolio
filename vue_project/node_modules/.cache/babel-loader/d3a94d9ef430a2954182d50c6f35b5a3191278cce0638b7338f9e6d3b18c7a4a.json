{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, \"prop from search \" + _toDisplayString(this.$route.params.id), 1 /* TEXT */), _createElementVNode(\"input\", {\n    type: \"text\",\n    value: $data.user.id\n  }, null, 8 /* PROPS */, _hoisted_1), _createElementVNode(\"input\", {\n    type: \"text\",\n    value: $data.user.name\n  }, null, 8 /* PROPS */, _hoisted_2)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$route","params","id","type","value","$data","user","name"],"sources":["/usr/src/app/src/pages/app/Detail.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>prop from search {{ this.$route.params.id }} </h1>\n        <input type=\"text\" v-bind:value=\"user.id\" />\n        <input type=\"text\" v-bind:value=\"user.name\" />\n    </div>\n</template>\n  \n  <script>\n  import { ref } from 'vue';\n  import axios from \"axios\";\n  export default {\n    name: 'detail',\n    props: {\n      //ここで引数を受け取る\n      id: String\n    },\n    data(){\n            return{\n                user: {\n                  id: null,\n                  name: null\n                },\n                searchId: null\n            }\n        },\n    beforeMount() {\n        this.searchId = this.$route.params.id;\n        console.log('params what we get is === ' + this.searchId);\n        this.getResults(this.searchId);\n    },\n    methods: {\n        getResults(q) {\n            axios\n            .get('http://localhost:8080/detail?', {params:  {id: q}})\n                .then(\n                    response => {\n                        this.user.id(response.data.id);\n                        this.user.name(response.data.name);\n                        console.log(this.user);\n                    } \n                ).catch(\n                    error => {\n                        console.debug('error');\n                        let errorData1 = {id: 2, name: \"Jirou\"};\n                        this.user.push(errorData1);\n                    }\n                );    \n        }\n    }\n    \n  }\n  </script>\n  \n  <style>\n  /*CSSを記載*/\n  </style>\n  "],"mappings":";;;;uBACIA,mBAAA,CAIM,cAHFC,mBAAA,CAAsD,YAAlD,mBAAiB,GAAAC,gBAAA,MAAQC,MAAM,CAACC,MAAM,CAACC,EAAE,kBAC7CJ,mBAAA,CAA4C;IAArCK,IAAI,EAAC,MAAM;IAAQC,KAAK,EAAEC,KAAA,CAAAC,IAAI,CAACJ;uCACtCJ,mBAAA,CAA8C;IAAvCK,IAAI,EAAC,MAAM;IAAQC,KAAK,EAAEC,KAAA,CAAAC,IAAI,CAACC"},"metadata":{},"sourceType":"module","externalDependencies":[]}