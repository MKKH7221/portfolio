{"ast":null,"code":"import { ref } from 'vue';\nimport axios from \"axios\";\n// import CountryListService from '../../CountryListService.js';\nexport default {\n  name: 'editUser',\n  props: {\n    id: String\n  },\n  data() {\n    return {\n      editUserForm: {\n        id: null,\n        name: null,\n        tel: null,\n        address: null,\n        country: {\n          name: null,\n          code: null\n        }\n      },\n      searchId: null,\n      countryList: [],\n      message: \"\",\n      errMessage: \"\"\n    };\n  },\n  created() {\n    this.searchId = this.$route.params.id;\n    this.getResults();\n    this.init();\n  },\n  methods: {\n    getResults() {\n      axios.get('http://localhost:8080/edit/' + this.searchId).then(response => {\n        this.editUserForm.id = response.data.id;\n        this.editUserForm.name = response.data.name;\n        this.editUserForm.address = response.data.address;\n        this.editUserForm.tel = response.data.tel;\n        this.editUserForm.country.name = response.data.country.name;\n        this.editUserForm.country.code = response.data.country.code;\n      }).catch(error => {\n        this.errMessage = \"Failed to find user\";\n        // alert('error');\n        console.log('error users: ' + this.editUserForm);\n      });\n    },\n    update() {\n      // To update country, only country code is needed\n      this.editUserForm.country.name = \"\";\n      axios.post('http://localhost:8080/update', this.editUserForm).then(response => {\n        this.editUserForm.id = response.data.id;\n        this.editUserForm.name = response.data.name;\n        this.editUserForm.address = response.data.address;\n        this.editUserForm.tel = response.data.tel;\n        this.editUserForm.country.name = response.data.country.name;\n        this.editUserForm.country.code = response.data.country.code;\n        this.message = \"Successfully Created New User\";\n      }).catch(error => {\n        if (error.response.status) {\n          this.errMessage = `update:status: ${error.response.status}, message: ${error.response.data}`;\n        } else {\n          this.errMessage = `Fail to create user`;\n        }\n      });\n    },\n    init() {\n      CountryListService.getCountryList().then(response => {\n        this.countryList = response.data;\n      }).catch(error => {\n        if (error.response.status) {\n          this.errMessage = `init:status: ${error.response.status}, message: ${error.response.data}`;\n        } else {\n          this.errMessage = `Fail to get country List`;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ref","axios","name","props","id","String","data","editUserForm","tel","address","country","code","searchId","countryList","message","errMessage","created","$route","params","getResults","init","methods","get","then","response","catch","error","console","log","update","post","status","CountryListService","getCountryList"],"sources":["/usr/src/app/src/pages/app/Edit.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <h3>Edit User </h3>    \n        <div v-show=\"errMessage\" class=\"alert alert-danger\">{{errMessage}}</div>\n        <div v-show=\"message\" class=\"alert alert-success\">{{ message }}</div>\n        <table class=\"table\">\n            <tr>\n                <th>Id</th>\n                <td><input v-model=\"editUserForm.id\" disabled=\"true\"></td>\n            </tr>\n            <tr>\n                <th>Name</th>\n                <td><input v-model=\"editUserForm.name\" /></td>\n            </tr>\n            <tr>\n                <th>Adress</th>\n                <td><input v-model=\"editUserForm.address\" /></td>\n            </tr>\n            <tr>\n                <th>Tel</th>\n                <td><input v-model=\"editUserForm.tel\" /></td>\n            </tr>\n            <tr>\n                <th>Country</th>\n                <td>\n                    <select v-model=\"editUserForm.country.code\" id=\"selectedCountryCode\">\n                        <option \n                            v-for=\"country in countryList\" v-bind:key=\"country.name\" v-bind:value=\"country.code\">\n                            {{ country.name }}\n                        </option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <button @click=\"update()\" type=\"button\" class=\"btn-primary button_align\"> Confirm </button>\n            </tr>\n        </table>\n    </div>\n</template>\n<script>\n  import { ref } from 'vue';\n  import axios from \"axios\";\n    // import CountryListService from '../../CountryListService.js';\n  export default {\n    name: 'editUser',\n    props: {\n      id: String\n    },\n    data(){\n        return{\n            editUserForm: {\n                id: null,\n                name: null,\n                tel: null,\n                address: null,\n                country : {\n                    name: null,\n                    code: null\n                }\n            },\n            searchId: null,\n            countryList: [], \n            message : \"\",\n            errMessage :\"\"\n        }\n    },\n    created() {\n        this.searchId = this.$route.params.id;\n        this.getResults();\n        this.init();\n    },\n    methods: {\n        getResults() {\n            axios\n            .get('http://localhost:8080/edit/'+ this.searchId)\n                .then(\n                    response => {\n                        this.editUserForm.id = response.data.id;\n                        this.editUserForm.name = response.data.name;\n                        this.editUserForm.address = response.data.address;\n                        this.editUserForm.tel = response.data.tel;\n                        this.editUserForm.country.name = response.data.country.name;\n                        this.editUserForm.country.code = response.data.country.code;\n                    } \n                ).catch(\n                    error => {\n                        this.errMessage = \"Failed to find user\";\n                        // alert('error');\n                        console.log('error users: ' + this.editUserForm);\n                    }\n                );    \n        },\n        update() {\n            // To update country, only country code is needed\n            this.editUserForm.country.name = \"\";\n            axios.post('http://localhost:8080/update', this.editUserForm)\n            .then(\n                response => {\n                    this.editUserForm.id = response.data.id;\n                    this.editUserForm.name = response.data.name;\n                    this.editUserForm.address = response.data.address;\n                    this.editUserForm.tel = response.data.tel;\n                    this.editUserForm.country.name = response.data.country.name;\n                    this.editUserForm.country.code = response.data.country.code;\n                    this.message=\"Successfully Created New User\";\n                } \n            ).catch(\n                error => {\n                    if (error.response.status) {\n                        this.errMessage = `update:status: ${error.response.status}, message: ${error.response.data}`;\n                    } else {\n                        this.errMessage = `Fail to create user`;\n                    }\n                }\n            );    \n        },\n        init () {\n            CountryListService.getCountryList()\n            .then (\n                response => {\n                    this.countryList = response.data;\n                } \n            ).catch (\n                error => {\n                    if (error.response.status) {\n                        this.errMessage = `init:status: ${error.response.status}, message: ${error.response.data}`;\n                    } else {\n                        this.errMessage = `Fail to get country List`;\n                    }\n                }\n            ); \n        }\n    }\n  }\n  </script>\n"],"mappings":"AAwCE,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACvB;AACF,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,EAAE,EAAEC;EACN,CAAC;EACDC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,YAAY,EAAE;QACVH,EAAE,EAAE,IAAI;QACRF,IAAI,EAAE,IAAI;QACVM,GAAG,EAAE,IAAI;QACTC,OAAO,EAAE,IAAI;QACbC,OAAM,EAAI;UACNR,IAAI,EAAE,IAAI;UACVS,IAAI,EAAE;QACV;MACJ,CAAC;MACDC,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAE,EAAE;MACfC,OAAM,EAAI,EAAE;MACZC,UAAS,EAAG;IAChB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACJ,QAAO,GAAI,IAAI,CAACK,MAAM,CAACC,MAAM,CAACd,EAAE;IACrC,IAAI,CAACe,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,IAAI,CAAC,CAAC;EACf,CAAC;EACDC,OAAO,EAAE;IACLF,UAAUA,CAAA,EAAG;MACTlB,KAAI,CACHqB,GAAG,CAAC,6BAA6B,GAAE,IAAI,CAACV,QAAQ,EAC5CW,IAAI,CACDC,QAAO,IAAK;QACR,IAAI,CAACjB,YAAY,CAACH,EAAC,GAAIoB,QAAQ,CAAClB,IAAI,CAACF,EAAE;QACvC,IAAI,CAACG,YAAY,CAACL,IAAG,GAAIsB,QAAQ,CAAClB,IAAI,CAACJ,IAAI;QAC3C,IAAI,CAACK,YAAY,CAACE,OAAM,GAAIe,QAAQ,CAAClB,IAAI,CAACG,OAAO;QACjD,IAAI,CAACF,YAAY,CAACC,GAAE,GAAIgB,QAAQ,CAAClB,IAAI,CAACE,GAAG;QACzC,IAAI,CAACD,YAAY,CAACG,OAAO,CAACR,IAAG,GAAIsB,QAAQ,CAAClB,IAAI,CAACI,OAAO,CAACR,IAAI;QAC3D,IAAI,CAACK,YAAY,CAACG,OAAO,CAACC,IAAG,GAAIa,QAAQ,CAAClB,IAAI,CAACI,OAAO,CAACC,IAAI;MAC/D,CACJ,CAAC,CAACc,KAAK,CACHC,KAAI,IAAK;QACL,IAAI,CAACX,UAAS,GAAI,qBAAqB;QACvC;QACAY,OAAO,CAACC,GAAG,CAAC,eAAc,GAAI,IAAI,CAACrB,YAAY,CAAC;MACpD,CACJ,CAAC;IACT,CAAC;IACDsB,MAAMA,CAAA,EAAG;MACL;MACA,IAAI,CAACtB,YAAY,CAACG,OAAO,CAACR,IAAG,GAAI,EAAE;MACnCD,KAAK,CAAC6B,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAACvB,YAAY,EAC3DgB,IAAI,CACDC,QAAO,IAAK;QACR,IAAI,CAACjB,YAAY,CAACH,EAAC,GAAIoB,QAAQ,CAAClB,IAAI,CAACF,EAAE;QACvC,IAAI,CAACG,YAAY,CAACL,IAAG,GAAIsB,QAAQ,CAAClB,IAAI,CAACJ,IAAI;QAC3C,IAAI,CAACK,YAAY,CAACE,OAAM,GAAIe,QAAQ,CAAClB,IAAI,CAACG,OAAO;QACjD,IAAI,CAACF,YAAY,CAACC,GAAE,GAAIgB,QAAQ,CAAClB,IAAI,CAACE,GAAG;QACzC,IAAI,CAACD,YAAY,CAACG,OAAO,CAACR,IAAG,GAAIsB,QAAQ,CAAClB,IAAI,CAACI,OAAO,CAACR,IAAI;QAC3D,IAAI,CAACK,YAAY,CAACG,OAAO,CAACC,IAAG,GAAIa,QAAQ,CAAClB,IAAI,CAACI,OAAO,CAACC,IAAI;QAC3D,IAAI,CAACG,OAAO,GAAC,+BAA+B;MAChD,CACJ,CAAC,CAACW,KAAK,CACHC,KAAI,IAAK;QACL,IAAIA,KAAK,CAACF,QAAQ,CAACO,MAAM,EAAE;UACvB,IAAI,CAAChB,UAAS,GAAK,kBAAiBW,KAAK,CAACF,QAAQ,CAACO,MAAO,cAAaL,KAAK,CAACF,QAAQ,CAAClB,IAAK,EAAC;QAChG,OAAO;UACH,IAAI,CAACS,UAAS,GAAK,qBAAoB;QAC3C;MACJ,CACJ,CAAC;IACL,CAAC;IACDK,IAAGA,CAAA,EAAK;MACJY,kBAAkB,CAACC,cAAc,CAAC,EACjCV,IAAG,CACAC,QAAO,IAAK;QACR,IAAI,CAACX,WAAU,GAAIW,QAAQ,CAAClB,IAAI;MACpC,CACJ,CAAC,CAACmB,KAAI,CACFC,KAAI,IAAK;QACL,IAAIA,KAAK,CAACF,QAAQ,CAACO,MAAM,EAAE;UACvB,IAAI,CAAChB,UAAS,GAAK,gBAAeW,KAAK,CAACF,QAAQ,CAACO,MAAO,cAAaL,KAAK,CAACF,QAAQ,CAAClB,IAAK,EAAC;QAC9F,OAAO;UACH,IAAI,CAACS,UAAS,GAAK,0BAAyB;QAChD;MACJ,CACJ,CAAC;IACL;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}